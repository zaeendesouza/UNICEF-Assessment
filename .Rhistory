rm(list=ls())
# Loading packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(fs, usethis)
# !!!! USER NEEDS TO EDIT THIS !!!!
root_dir <- "C:/Users/[NAME WAS HERE]/OneDrive/Documents/GitHub/UNICEF"
# project creation
if (!dir_exists(root_dir)) {
dir_create(root_dir)
usethis::create_project(root_dir, open = FALSE)
} else if (!file.exists(file.path(root_dir, "UNICEF Assessment.Rproj"))) {
usethis::create_project(root_dir, open = FALSE)
} else {
message("Project already exists at: ", root_dir)
}
rm(list=ls())
# Loading packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(fs, usethis)
# !!!! USER NEEDS TO EDIT THIS !!!!
root_dir <- "C:/Users/Zaeen de Souza/OneDrive/Documents/GitHub/UNICEF"
# project creation
if (!dir_exists(root_dir)) {
dir_create(root_dir)
usethis::create_project(root_dir, open = FALSE)
} else if (!file.exists(file.path(root_dir, "UNICEF Assessment.Rproj"))) {
usethis::create_project(root_dir, open = FALSE)
} else {
message("Project already exists at: ", root_dir)
}
rm(list=ls())
# Loading packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(fs, usethis)
# !!!! USER NEEDS TO EDIT THIS !!!!
root_dir <- "C:/Users/[NAME]/OneDrive/Documents/GitHub/UNICEF"
# project creation
if (!dir_exists(root_dir)) {
dir_create(root_dir)
usethis::create_project(root_dir, open = FALSE)
} else if (!file.exists(file.path(root_dir, "UNICEF Assessment.Rproj"))) {
usethis::create_project(root_dir, open = FALSE)
} else {
message("Project already exists at: ", root_dir)
}
rm(list=ls())
# Loading packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(fs, usethis)
# !!!! USER NEEDS TO EDIT THIS !!!!
root_dir <- "C:/Users/Zaeen de Souza/OneDrive/Documents/GitHub/UNICEF"
# project creation
if (!dir_exists(root_dir)) {
dir_create(root_dir)
usethis::create_project(root_dir, open = FALSE)
} else if (!file.exists(file.path(root_dir, "UNICEF Assessment.Rproj"))) {
usethis::create_project(root_dir, open = FALSE)
} else {
message("Project already exists at: ", root_dir)
}
# folders
folders <- c(
"01_rawdata",
"02_cleaneddata",
"03_outputs",
"04_scripts"
)
# Create all folders; will populate them manually for me - can be done via code too!
for (folder in folders) {
sub_path <- file.path(root_dir, folder)
if (!dir_exists(sub_path)) {
dir_create(sub_path)
message("Created: ", sub_path)
} else {
message("Already exists: ", sub_path)
}
}
# Create README.md if it doesntr exist
readme_path <- file.path(root_dir, "README.md")
if (!file_exists(readme_path)) {
writeLines(c("# UNICEF Assessment",
"",
"Project folder initialized."),
readme_path)
message("Created README.md")
}
message("Open the project with: ")
message(file.path(root_dir, "UNICEF Assessment.Rproj"))
16+12
16+6
#------------------------------------------------------------------------------#
# Title: Report Script
# Date: 28/07/2025
# Description: Compiles the .rmd file to make the reportr
#------------------------------------------------------------------------------#
library(rmarkdown)
library(here)
library(utils)
# Function to compile the Rmd file to Word with selectable output directory
compile_report <- function(rmd_path = here("04_scripts/4_UNICEF Assessment.Rmd")) {
# Prompt user to select output directory
output_dir <- choose.dir(caption = "Select output directory for the compiled Word document")
if (is.na(output_dir) || output_dir == "") {
stop("No output directory selected. Aborting.")
}
# Extract filename without extension
output_filename <- paste0(tools::file_path_sans_ext(basename(rmd_path)), ".docx")
# Full output path
output_path <- file.path(output_dir, output_filename)
# Render the Rmd file with output file and output dir specified
rmarkdown::render(
input = rmd_path,
output_format = "word_document",
output_file = output_filename,
output_dir = output_dir,
clean = TRUE,
quiet = FALSE
)
message("Report compiled successfully to: ", output_path)
}
# Run the function (edit the Rmd path if needed)
compile_report()
library(rmarkdown)
library(here)
# Path to your Rmd file
rmd_path <- here("04_scripts/4_UNICEF Assessment.Rmd")  # update filename if needed
# Hardcoded output directory (absolute or relative)
output_dir <- here("03_outputs")  # change this to your desired output folder
# Output filename
output_file <- "UNICEF Assessment (Output).docx"  # change filename if you want
# Render the Rmd file
rmarkdown::render(
input = rmd_path,
output_format = "word_document",
output_file = output_file,
output_dir = output_dir,
clean = TRUE,
quiet = FALSE
)
library(rmarkdown)
library(here)
# Path to your Rmd file
rmd_path <- here("04_scripts/4_UNICEF Assessment.Rmd")  # update filename if needed
# Hardcoded output directory (absolute or relative)
output_dir <- here("03_outputs")  # change this to your desired output folder
# Output filename
output_file <- "UNICEF Assessment (Output).docx"  # change filename if you want
# Render the Rmd file
rmarkdown::render(
input = rmd_path,
output_format = "word_document",
output_file = output_file,
output_dir = output_dir,
clean = TRUE,
quiet = FALSE
)
message("Report compiled successfully to: ", file.path(output_dir, output_file))
output_dir
library(rmarkdown)
library(here)
# Path to your Rmd file
rmd_path <- here("04_scripts/4_UNICEF Assessment.Rmd")  # update filename if needed
# Hardcoded output directory (absolute or relative)
output_dir <- here("03_outputs/")  # change this to your desired output folder
# Output filename
output_file <- "UNICEF Assessment (Output).docx"  # change filename if you want
# Render the Rmd file
rmarkdown::render(
input = rmd_path,
output_format = "word_document",
output_file = output_file,
output_dir = output_dir,
clean = TRUE,
quiet = FALSE
)
message("Report compiled successfully to: ", file.path(output_dir, output_file))
library(rmarkdown)
library(here)
# Path to your Rmd file
rmd_path <- here("04_scripts/4_UNICEF Assessment.Rmd")  # update filename if needed
# Hardcoded output directory (absolute or relative)
output_dir <- here("03_outputs/")  # change this to your desired output folder
# Output filename
output_file <- "UNICEF Assessment (Output).docx"  # change filename if you want
# Render the Rmd file
rmarkdown::render(
input = rmd_path,
output_format = "word_document",
output_file = output_file,
output_dir = output_dir,
clean = TRUE,
quiet = FALSE
)
